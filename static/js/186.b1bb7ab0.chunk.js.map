{"version":3,"file":"static/js/186.b1bb7ab0.chunk.js","mappings":"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","sources":["common/constants.js","components/Error/styled.js","components/Error/Error.jsx","components/Reviews/Reviews.jsx","service/fetchTheMovieDb.js"],"sourcesContent":["\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import styled from 'styled-components';\n\nconst Err = styled.p`\n  margin-top: 38px;\n  margin-left: auto;\n  margin-right: auto;\n  color: red;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport default Err;\n","import PropTypes from 'prop-types';\nimport Err from './styled';\n\nconst ERR_UNKNOWN = 'Something unexpected happed...';\n\nconst Error = ({msg}) => {\n  return <Err>{msg || ERR_UNKNOWN}</Err>;\n};\n\nErr.propTypes = {\n  msg: PropTypes.string,\n};\n\nexport default Error;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'service/fetchTheMovieDb';\nimport Error from 'components/Error/Error';\nimport Loading from 'components/Loading/Loading';\nimport { STATUS } from 'common/constants';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    api\n      .fetchMovieReviews(id)\n      .then(({ results }) => {\n        setReviews(results);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n        setReviews([]);\n      });\n\n    return () => {\n      api.abortFetch();\n    };\n  }, [id]);\n\n  return (\n    <div>\n      {status === STATUS.REJECTED && <Error msg={error.message} />}\n      {status === STATUS.PENDING && <Loading />}\n      {status === STATUS.RESOLVED &&\n        (!reviews.length ? (\n          <p>We don't have any reviews for this movie.</p>\n        ) : (\n          <ul>\n            {reviews.map(({ id, author, content }) => {\n              return (\n                <li key={id}>\n                  <h4>Author: {author}</h4>\n                  <div>{content}</div>\n                </li>\n              );\n            })}\n          </ul>\n        ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","/* *****************************************************************************\nКінопошук:\n-бекенд  themoviedb.org API(https://developers.themoviedb.org/3/getting-started/introduction)\n-ендпоінти:\n  /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n  /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n  /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n  /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n  /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n*/\n\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b3cb1db782e55dafd1da39b95bd6f5f2';\n\nlet controller;\n\nfunction abortFetch() {\n  if (controller) {\n    controller.abort();\n  };\n}\n\n// /trending/get-trending\nasync function fetchTrendingMovies() {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=1&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nasync function fetchSearchMovies(searchQuery, page = 1) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${searchQuery}`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-details\nasync function fetchMovieDetails(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-credits\nasync function fetchMovieCast(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-reviews\nasync function fetchMovieReviews(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMovieCast,\n  fetchMovieDetails,\n  fetchMovieReviews,\n  fetchSearchMovies,\n  abortFetch,\n};\n\nexport default api;\n\n/*\nposter_sizes = ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'];\n */\n"],"names":["STATUS","IDLE","PENDING","RESOLVED","REJECTED","styled","Err","msg","PropTypes","id","useParams","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","api","then","results","catch","message","length","map","author","content","controller","BASE_URL","API_KEY","fetchTrendingMovies","AbortController","url","axios","signal","response","data","Error","searchQuery","page","fetchMovieReviews","fetchMovieCast","fetchMovieDetails","fetchSearchMovies","abortFetch","abort"],"sourceRoot":""}