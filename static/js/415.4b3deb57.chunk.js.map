{"version":3,"file":"static/js/415.4b3deb57.chunk.js","mappings":"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","sources":["common/constants.js","common/styled.js","components/Error/styled.js","components/Error/Error.jsx","components/moviesList/MoviesList.jsx","pages/Home.jsx","service/fetchTheMovieDb.js"],"sourcesContent":["\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: green;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    color: green;\n  }\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const FlexColumn = styled.div`\n  margin: 8px;\n  display: flex;\n  flex-direction: column;\n  border-bottom: solid gray 1px;\n  flex-grow: 2;\n`;\n\nexport const GoBack = styled(Link)`\n  margin-bottom: 8px;\n  width: 80px;\n  text-decoration: none;\n  padding: 0 4px;\n  color: orangered;\n  border-radius: 4px;\n  border: solid 1px;\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n","import styled from 'styled-components';\n\nconst Err = styled.p`\n  margin-top: 38px;\n  margin-left: auto;\n  margin-right: auto;\n  color: red;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport default Err;\n","import PropTypes from 'prop-types';\nimport Err from './styled';\n\nconst ERR_UNKNOWN = 'Something unexpected happed...';\n\nconst Error = ({msg}) => {\n  return <Err>{msg || ERR_UNKNOWN}</Err>;\n};\n\nErr.propTypes = {\n  msg: PropTypes.string,\n};\n\nexport default Error;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink } from 'common/styled';\n\nconst MovieList = ({ movies, home = false }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, id }) => {\n        return (\n          <li key={id}>\n            <StyledLink\n              to={home ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n            >\n              {title}\n              <br />\n            </StyledLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  home: PropTypes.bool,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport api from 'service/fetchTheMovieDb';\nimport MovieList from 'components/moviesList/MoviesList';\nimport Error from 'components/Error/Error';\nimport Loading from 'components/Loading/Loading';\nimport { STATUS } from 'common/constants';\n\nconst Home = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(() => {\n      setStatus(STATUS.PENDING);\n      api\n        .fetchTrendingMovies()\n        .then(({ results }) => {\n          setMovies(results);\n          setStatus(STATUS.RESOLVED);\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(STATUS.REJECTED);\n          setMovies([]);\n        });\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n    return () => {\n      api.abortFetch();\n    };\n  }, [fetchData]);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {status === STATUS.REJECTED && <Error msg={error.message} />}\n      {status === STATUS.RESOLVED && <MovieList home={true} movies={movies} />}\n      {status === STATUS.PENDING && <Loading />}\n    </div>\n  );\n};\n\nexport default Home;\n","/* *****************************************************************************\nКінопошук:\n-бекенд  themoviedb.org API(https://developers.themoviedb.org/3/getting-started/introduction)\n-ендпоінти:\n  /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n  /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n  /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n  /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n  /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n*/\n\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b3cb1db782e55dafd1da39b95bd6f5f2';\n\nlet controller;\n\nfunction abortFetch() {\n  if (controller) {\n    controller.abort();\n  };\n}\n\n// /trending/get-trending\nasync function fetchTrendingMovies() {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=1&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nasync function fetchSearchMovies(searchQuery, page = 1) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${searchQuery}`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-details\nasync function fetchMovieDetails(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-credits\nasync function fetchMovieCast(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-reviews\nasync function fetchMovieReviews(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMovieCast,\n  fetchMovieDetails,\n  fetchMovieReviews,\n  fetchSearchMovies,\n  abortFetch,\n};\n\nexport default api;\n\n/*\nposter_sizes = ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'];\n */\n"],"names":["STATUS","IDLE","PENDING","RESOLVED","REJECTED","StyledLink","styled","Link","FlexRow","FlexColumn","GoBack","Err","msg","PropTypes","movies","home","location","useLocation","map","title","id","to","state","from","useState","status","setStatus","setMovies","error","setError","fetchData","useCallback","api","then","results","catch","useEffect","message","controller","BASE_URL","API_KEY","fetchTrendingMovies","AbortController","url","axios","signal","response","data","Error","searchQuery","page","fetchMovieReviews","fetchMovieCast","fetchMovieDetails","fetchSearchMovies","abortFetch","abort"],"sourceRoot":""}