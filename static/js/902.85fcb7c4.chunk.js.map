{"version":3,"file":"static/js/902.85fcb7c4.chunk.js","mappings":"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","sources":["common/constants.js","components/Error/styled.js","components/Error/Error.jsx","components/moviesList/MoviesList.jsx","components/DebouncedInput/styled.js","components/DebouncedInput/DebouncedInput.jsx","pages/Movies.jsx","service/fetchTheMovieDb.js"],"sourcesContent":["\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import styled from 'styled-components';\n\nconst Err = styled.p`\n  margin-top: 38px;\n  margin-left: auto;\n  margin-right: auto;\n  color: red;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport default Err;\n","import PropTypes from 'prop-types';\nimport Err from './styled';\n\nconst ERR_UNKNOWN = 'Something unexpected happed...';\n\nconst Error = ({msg}) => {\n  return <Err>{msg || ERR_UNKNOWN}</Err>;\n};\n\nErr.propTypes = {\n  msg: PropTypes.string,\n};\n\nexport default Error;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies, home=false }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, id }) => {\n        return (\n          <Link\n            key={id}\n            to={home ? `movies/${id}` : `${id}`}\n            state={{ from: location }}\n          >\n            <div>{title}</div>\n          </Link>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n  })),\n  home: PropTypes.bool\n}\n\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin: 8px 16px;\n  width: 320px;\n  border-style: solid;\n  border-color: orangered;\n  border-radius: 4px;\n`;\n","import { debounce } from 'lodash';\nimport { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from './styled';\n\nconst DebouncedInput = ({ value='', debouncedFunc }) => {\n  const debouncedAction = useMemo(() => {\n    return debounce(debouncedFunc, 500);\n  }, [debouncedFunc]);\n\n  const [query, setQuery] = useState([value]);\n\n  const onChange = e => {\n    const query = e.target.value;\n    setQuery(query);\n    debouncedAction(query);\n  };\n\n  return <Input type=\"text\" value={query} onChange={onChange} />;\n};\n\nDebouncedInput.propTypes = {\n  value: PropTypes.string,\n  debouncedFunc: PropTypes.func\n};\n\nexport default DebouncedInput;\n\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport api from 'service/fetchTheMovieDb';\nimport MovieList from 'components/moviesList/MoviesList';\nimport Error from 'components/Error/Error';\nimport Loading from 'components/Loading/Loading';\nimport { STATUS } from 'common/constants';\nimport DebouncedInput from 'components/DebouncedInput/DebouncedInput';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback((query) => {\n    if (query === '') return;\n\n    setStatus(STATUS.PENDING);\n    console.log('fetching movies...', query);\n    api\n      .fetchSearchMovies(query)\n      .then(({ results }) => {\n        setMovies(results);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n        setMovies([]);\n      });\n  }, []);\n\n  const onChange = query => {\n    api.abortFetch();\n    setStatus(STATUS.IDLE);\n\n    if (query === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query });\n    fetchData(query);\n  };\n\n  useEffect(() => {\n    fetchData(query);\n    return () => {\n      api.abortFetch();\n    };\n  }, [fetchData, query]);\n\n  return (\n    <div>\n      <DebouncedInput value={query} debouncedFunc={onChange}></DebouncedInput>\n      {status === STATUS.REJECTED && <Error msg={error.message} />}\n      {status === STATUS.RESOLVED &&\n        (!movies.length ? (\n          <p>Nothing found for your search...</p>\n        ) : (\n          <MovieList movies={movies} />\n        ))}\n      {status === STATUS.PENDING && <Loading />}\n    </div>\n  );\n};\n\nexport default Movies;\n","/* *****************************************************************************\nКінопошук:\n-бекенд  themoviedb.org API(https://developers.themoviedb.org/3/getting-started/introduction)\n-ендпоінти:\n  /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n  /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n  /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n  /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n  /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n*/\n\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b3cb1db782e55dafd1da39b95bd6f5f2';\n\nlet controller;\n\nfunction abortFetch() {\n  if (controller) {\n    controller.abort();\n  };\n}\n\n// /trending/get-trending\nasync function fetchTrendingMovies() {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=1&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nasync function fetchSearchMovies(searchQuery, page = 1) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${searchQuery}`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-details\nasync function fetchMovieDetails(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-credits\nasync function fetchMovieCast(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// /movies/get-movie-reviews\nasync function fetchMovieReviews(id) {\n  try {\n    controller = new AbortController();\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url, { signal: controller.signal });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMovieCast,\n  fetchMovieDetails,\n  fetchMovieReviews,\n  fetchSearchMovies,\n  abortFetch,\n};\n\nexport default api;\n\n/*\nposter_sizes = ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'];\n */\n"],"names":["STATUS","IDLE","PENDING","RESOLVED","REJECTED","styled","Err","msg","PropTypes","movies","home","location","useLocation","map","title","id","to","state","from","Input","value","debouncedFunc","debouncedAction","useMemo","debounce","useState","query","setQuery","type","onChange","e","target","useSearchParams","searchParams","setSearchParams","get","status","setStatus","setMovies","error","setError","fetchData","useCallback","console","log","api","then","results","catch","useEffect","Error","message","length","Loading","controller","BASE_URL","API_KEY","fetchTrendingMovies","AbortController","url","axios","signal","response","data","searchQuery","page","fetchMovieReviews","fetchMovieCast","fetchMovieDetails","fetchSearchMovies","abortFetch","abort"],"sourceRoot":""}